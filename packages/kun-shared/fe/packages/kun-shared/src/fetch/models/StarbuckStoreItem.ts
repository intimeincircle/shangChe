/* tslint:disable */
/* eslint-disable */
/**
 * title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    StarbuckItemMeta,
    StarbuckItemMetaFromJSON,
    StarbuckItemMetaFromJSONTyped,
    StarbuckItemMetaToJSON,
} from './StarbuckItemMeta';
import {
    StarbuckStore,
    StarbuckStoreFromJSON,
    StarbuckStoreFromJSONTyped,
    StarbuckStoreToJSON,
} from './StarbuckStore';

/**
 * 
 * @export
 * @interface StarbuckStoreItem
 */
export interface StarbuckStoreItem {
    /**
     * 
     * @type {StarbuckItemMeta}
     * @memberof StarbuckStoreItem
     */
    meta: StarbuckItemMeta;
    /**
     * 
     * @type {Array<StarbuckStore>}
     * @memberof StarbuckStoreItem
     */
    data?: Array<StarbuckStore>;
}

export function StarbuckStoreItemFromJSON(json: any): StarbuckStoreItem {
    return StarbuckStoreItemFromJSONTyped(json, false);
}

export function StarbuckStoreItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): StarbuckStoreItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'meta': StarbuckItemMetaFromJSON(json['meta']),
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(StarbuckStoreFromJSON)),
    };
}

export function StarbuckStoreItemToJSON(value?: StarbuckStoreItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'meta': StarbuckItemMetaToJSON(value.meta),
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(StarbuckStoreToJSON)),
    };
}

