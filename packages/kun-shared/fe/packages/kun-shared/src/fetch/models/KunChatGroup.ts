/* tslint:disable */
/* eslint-disable */
/**
 * title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EnumeratumChatGroupType,
    EnumeratumChatGroupTypeFromJSON,
    EnumeratumChatGroupTypeFromJSONTyped,
    EnumeratumChatGroupTypeToJSON,
} from './EnumeratumChatGroupType';

/**
 * 
 * @export
 * @interface KunChatGroup
 */
export interface KunChatGroup {
    /**
     * 
     * @type {number}
     * @memberof KunChatGroup
     */
    channelId: number;
    /**
     * 
     * @type {string}
     * @memberof KunChatGroup
     */
    groupId: string;
    /**
     * 
     * @type {EnumeratumChatGroupType}
     * @memberof KunChatGroup
     */
    groupType: EnumeratumChatGroupType;
    /**
     * 
     * @type {boolean}
     * @memberof KunChatGroup
     */
    isActive: boolean;
    /**
     * 
     * @type {string}
     * @memberof KunChatGroup
     */
    groupName?: string;
    /**
     * 
     * @type {string}
     * @memberof KunChatGroup
     */
    groupNotice?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof KunChatGroup
     */
    members?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof KunChatGroup
     */
    user1?: string;
    /**
     * 
     * @type {string}
     * @memberof KunChatGroup
     */
    user2?: string;
}

export function KunChatGroupFromJSON(json: any): KunChatGroup {
    return KunChatGroupFromJSONTyped(json, false);
}

export function KunChatGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): KunChatGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelId': json['channelId'],
        'groupId': json['groupId'],
        'groupType': EnumeratumChatGroupTypeFromJSON(json['groupType']),
        'isActive': json['isActive'],
        'groupName': !exists(json, 'groupName') ? undefined : json['groupName'],
        'groupNotice': !exists(json, 'groupNotice') ? undefined : json['groupNotice'],
        'members': !exists(json, 'members') ? undefined : json['members'],
        'user1': !exists(json, 'user1') ? undefined : json['user1'],
        'user2': !exists(json, 'user2') ? undefined : json['user2'],
    };
}

export function KunChatGroupToJSON(value?: KunChatGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelId': value.channelId,
        'groupId': value.groupId,
        'groupType': EnumeratumChatGroupTypeToJSON(value.groupType),
        'isActive': value.isActive,
        'groupName': value.groupName,
        'groupNotice': value.groupNotice,
        'members': value.members,
        'user1': value.user1,
        'user2': value.user2,
    };
}

