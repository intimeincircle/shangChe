/* tslint:disable */
/* eslint-disable */
/**
 * title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConstantAppraiseType,
    ConstantAppraiseTypeFromJSON,
    ConstantAppraiseTypeFromJSONTyped,
    ConstantAppraiseTypeToJSON,
} from './ConstantAppraiseType';
import {
    HashLong,
    HashLongFromJSON,
    HashLongFromJSONTyped,
    HashLongToJSON,
} from './HashLong';

/**
 * 
 * @export
 * @interface ReqUpdatePracticeAppraise
 */
export interface ReqUpdatePracticeAppraise {
    /**
     * 
     * @type {HashLong}
     * @memberof ReqUpdatePracticeAppraise
     */
    seriesId: HashLong;
    /**
     * 
     * @type {HashLong}
     * @memberof ReqUpdatePracticeAppraise
     */
    postId: HashLong;
    /**
     * 
     * @type {string}
     * @memberof ReqUpdatePracticeAppraise
     */
    practiceId: string;
    /**
     * 
     * @type {ConstantAppraiseType}
     * @memberof ReqUpdatePracticeAppraise
     */
    appraiseType?: ConstantAppraiseType;
    /**
     * 
     * @type {string}
     * @memberof ReqUpdatePracticeAppraise
     */
    practiceUserId: string;
}

export function ReqUpdatePracticeAppraiseFromJSON(json: any): ReqUpdatePracticeAppraise {
    return ReqUpdatePracticeAppraiseFromJSONTyped(json, false);
}

export function ReqUpdatePracticeAppraiseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReqUpdatePracticeAppraise {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'seriesId': HashLongFromJSON(json['seriesId']),
        'postId': HashLongFromJSON(json['postId']),
        'practiceId': json['practiceId'],
        'appraiseType': !exists(json, 'appraiseType') ? undefined : ConstantAppraiseTypeFromJSON(json['appraiseType']),
        'practiceUserId': json['practiceUserId'],
    };
}

export function ReqUpdatePracticeAppraiseToJSON(value?: ReqUpdatePracticeAppraise | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'seriesId': HashLongToJSON(value.seriesId),
        'postId': HashLongToJSON(value.postId),
        'practiceId': value.practiceId,
        'appraiseType': ConstantAppraiseTypeToJSON(value.appraiseType),
        'practiceUserId': value.practiceUserId,
    };
}

