// Generated by ScalaTS 0.5.7: https://scala-ts.github.io/scala-ts/

import { DateTime, isDateTime } from './DateTime';
import { OptionDirection, isOptionDirection } from './OptionDirection';
import { OptionProductName, isOptionProductName } from './OptionProductName';
import { SymbolEnum, isSymbolEnum } from './SymbolEnum';

export interface OptionSymbol {
  symbolType: SymbolEnum;
  direction: OptionDirection;
  date: DateTime;
  productName: OptionProductName;
  price?: number;
}

export function isOptionSymbol(v: any): v is OptionSymbol {
  return (
    (!v['price'] || ((typeof v['price']) === 'number')) &&
    (v['productName'] && isOptionProductName(v['productName'])) &&
    (v['date'] && isDateTime(v['date'])) &&
    (v['direction'] && isOptionDirection(v['direction'])) &&
    (v['symbolType'] && isSymbolEnum(v['symbolType']))
  );
}
