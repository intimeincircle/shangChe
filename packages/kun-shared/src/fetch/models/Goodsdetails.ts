/* tslint:disable */
/* eslint-disable */
/**
 * title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DetailAttach,
    DetailAttachFromJSON,
    DetailAttachFromJSONTyped,
    DetailAttachToJSON,
} from './DetailAttach';

/**
 * 
 * @export
 * @interface Goodsdetails
 */
export interface Goodsdetails {
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    attachgroupid: number;
    /**
     * 
     * @type {string}
     * @memberof Goodsdetails
     */
    goodsname: string;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    goodsgroupid: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    stock: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    goodsprice: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    marketprice: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    goodsstatus: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    buyminnum: number;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    buymaxnum: number;
    /**
     * 
     * @type {string}
     * @memberof Goodsdetails
     */
    tiptext: string;
    /**
     * 
     * @type {string}
     * @memberof Goodsdetails
     */
    imgurl: string;
    /**
     * 
     * @type {number}
     * @memberof Goodsdetails
     */
    goodstype: number;
    /**
     * 
     * @type {string}
     * @memberof Goodsdetails
     */
    goodstypetext: string;
    /**
     * 
     * @type {string}
     * @memberof Goodsdetails
     */
    msgboxtip: string;
    /**
     * 
     * @type {string}
     * @memberof Goodsdetails
     */
    details: string;
    /**
     * 
     * @type {Array<DetailAttach>}
     * @memberof Goodsdetails
     */
    attach?: Array<DetailAttach>;
}

export function GoodsdetailsFromJSON(json: any): Goodsdetails {
    return GoodsdetailsFromJSONTyped(json, false);
}

export function GoodsdetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Goodsdetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'attachgroupid': json['attachgroupid'],
        'goodsname': json['goodsname'],
        'goodsgroupid': json['goodsgroupid'],
        'stock': json['stock'],
        'goodsprice': json['goodsprice'],
        'marketprice': json['marketprice'],
        'goodsstatus': json['goodsstatus'],
        'buyminnum': json['buyminnum'],
        'buymaxnum': json['buymaxnum'],
        'tiptext': json['tiptext'],
        'imgurl': json['imgurl'],
        'goodstype': json['goodstype'],
        'goodstypetext': json['goodstypetext'],
        'msgboxtip': json['msgboxtip'],
        'details': json['details'],
        'attach': !exists(json, 'attach') ? undefined : ((json['attach'] as Array<any>).map(DetailAttachFromJSON)),
    };
}

export function GoodsdetailsToJSON(value?: Goodsdetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'attachgroupid': value.attachgroupid,
        'goodsname': value.goodsname,
        'goodsgroupid': value.goodsgroupid,
        'stock': value.stock,
        'goodsprice': value.goodsprice,
        'marketprice': value.marketprice,
        'goodsstatus': value.goodsstatus,
        'buyminnum': value.buyminnum,
        'buymaxnum': value.buymaxnum,
        'tiptext': value.tiptext,
        'imgurl': value.imgurl,
        'goodstype': value.goodstype,
        'goodstypetext': value.goodstypetext,
        'msgboxtip': value.msgboxtip,
        'details': value.details,
        'attach': value.attach === undefined ? undefined : ((value.attach as Array<any>).map(DetailAttachToJSON)),
    };
}

