/* tslint:disable */
/* eslint-disable */
/**
 * title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ConstantExerciseType,
    ConstantExerciseTypeFromJSON,
    ConstantExerciseTypeFromJSONTyped,
    ConstantExerciseTypeToJSON,
} from './ConstantExerciseType';
import {
    ConstantSeriesType,
    ConstantSeriesTypeFromJSON,
    ConstantSeriesTypeFromJSONTyped,
    ConstantSeriesTypeToJSON,
} from './ConstantSeriesType';

/**
 * 
 * @export
 * @interface KunExercise
 */
export interface KunExercise {
    /**
     * 
     * @type {number}
     * @memberof KunExercise
     */
    channelId: number;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    seriesId: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    postId: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    id: string;
    /**
     * 
     * @type {ConstantExerciseType}
     * @memberof KunExercise
     */
    exerciseType: ConstantExerciseType;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    background?: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    tips?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof KunExercise
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Array<number>}
     * @memberof KunExercise
     */
    correct?: Array<number>;
    /**
     * 
     * @type {Array<string>}
     * @memberof KunExercise
     */
    options?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    answer?: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    editor?: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    editorName?: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    postTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof KunExercise
     */
    seriesName?: string;
    /**
     * 
     * @type {ConstantSeriesType}
     * @memberof KunExercise
     */
    seriesType?: ConstantSeriesType;
}

export function KunExerciseFromJSON(json: any): KunExercise {
    return KunExerciseFromJSONTyped(json, false);
}

export function KunExerciseFromJSONTyped(json: any, ignoreDiscriminator: boolean): KunExercise {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelId': json['channelId'],
        'seriesId': json['seriesId'],
        'postId': json['postId'],
        'id': json['id'],
        'exerciseType': ConstantExerciseTypeFromJSON(json['exerciseType']),
        'background': !exists(json, 'background') ? undefined : json['background'],
        'title': json['title'],
        'tips': !exists(json, 'tips') ? undefined : json['tips'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'correct': !exists(json, 'correct') ? undefined : json['correct'],
        'options': !exists(json, 'options') ? undefined : json['options'],
        'answer': !exists(json, 'answer') ? undefined : json['answer'],
        'editor': !exists(json, 'editor') ? undefined : json['editor'],
        'editorName': !exists(json, 'editorName') ? undefined : json['editorName'],
        'postTitle': !exists(json, 'postTitle') ? undefined : json['postTitle'],
        'seriesName': !exists(json, 'seriesName') ? undefined : json['seriesName'],
        'seriesType': !exists(json, 'seriesType') ? undefined : ConstantSeriesTypeFromJSON(json['seriesType']),
    };
}

export function KunExerciseToJSON(value?: KunExercise | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelId': value.channelId,
        'seriesId': value.seriesId,
        'postId': value.postId,
        'id': value.id,
        'exerciseType': ConstantExerciseTypeToJSON(value.exerciseType),
        'background': value.background,
        'title': value.title,
        'tips': value.tips,
        'tags': value.tags,
        'correct': value.correct,
        'options': value.options,
        'answer': value.answer,
        'editor': value.editor,
        'editorName': value.editorName,
        'postTitle': value.postTitle,
        'seriesName': value.seriesName,
        'seriesType': ConstantSeriesTypeToJSON(value.seriesType),
    };
}

